{"version":3,"file":"static/js/418.d59417d3.chunk.js","mappings":"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","sources":["pages/auth/AuthPages.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './AuthPages.css';\n\nexport const Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password })\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        navigate('/'); // Navigate to home page after login\n      } else {\n        setError(data.message || 'Login failed');\n      }\n    } catch (err) {\n      setError('Network error. Please try again.');\n      console.error('Login error:', err);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-box\">\n        <h2 className=\"auth-title\">Sign in to DishWise</h2>\n        <form onSubmit={handleLogin}>\n          {error && <div className=\"error-message\">{error}</div>}\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\" htmlFor=\"email\">Email address</label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              className=\"form-input\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\" htmlFor=\"password\">Password</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              className=\"form-input\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n\n          <button type=\"submit\" className=\"submit-button\">\n            Sign in\n          </button>\n        </form>\n\n        <div className=\"toggle-auth\">\n          Don't have an account?{' '}\n          <Link to=\"/signup\" className=\"toggle-button\">\n            Sign up\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const Signup = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    \n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:8000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          name, \n          email, \n          password \n        })\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        navigate('/login'); // Navigate to login page after successful signup\n      } else {\n        setError(data.message || 'Registration failed');\n      }\n    } catch (err) {\n      setError('Network error. Please try again.');\n      console.error('Signup error:', err);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-box\">\n        <h2 className=\"auth-title\">Create your DishWise account</h2>\n        <p className=\"auth-subtitle\">Start exploring delicious restaurants near you</p>\n        \n        <form onSubmit={handleSignup}>\n          {error && <div className=\"error-message\">{error}</div>}\n          \n          <div className=\"form-group\">\n            <label className=\"form-label\" htmlFor=\"name\">Full Name</label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              className=\"form-input\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\" htmlFor=\"email\">Email address</label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              className=\"form-input\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\" htmlFor=\"password\">Password</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              className=\"form-input\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"form-label\" htmlFor=\"confirm-password\">Confirm Password</label>\n            <input\n              id=\"confirm-password\"\n              type=\"password\"\n              className=\"form-input\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n          </div>\n\n          <button type=\"submit\" className=\"submit-button\">\n            Sign Up\n          </button>\n        </form>\n\n        <div className=\"toggle-auth\">\n          Already have an account?{' '}\n          <Link to=\"/login\" className=\"toggle-button\">\n            Log in\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};"],"names":["Login","email","setEmail","useState","password","setPassword","error","setError","navigate","useNavigate","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","localStorage","setItem","token","message","err","console","htmlFor","id","type","value","onChange","target","required","Link","to","Signup","name","setName","confirmPassword","setConfirmPassword"],"sourceRoot":""}