{"version":3,"file":"static/js/741.527ad8ca.chunk.js","mappings":"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","sources":["pages/LandingPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useLoadScript } from \"@react-google-maps/api\";\nimport './LandingPage.css';\n\n\nconst LandingPage = () => {\n    const libraries = useMemo(() => ['places', 'marker'], []);\n    const navigate = useNavigate();\n    const [searchInput, setSearchInput] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n        mapIds: [\"3d323ae4d3f413fd\"]\n    });\n\n    useEffect(() => {\n        if (loadError) {\n            console.error('Google Maps API loading error:', loadError);\n        }\n    }, [loadError]);\n\n\n    const navigateToResults = useCallback((address, coordinates) => {\n        navigate('/restaurants', {\n            state: {\n                searchLocation: {\n                    address,\n                    coordinates\n                }\n            }\n        });\n    }, [navigate]);\n\n    useEffect(() => {\n        if (!isLoaded) return;\n\n        const initializeAutocomplete = () => {\n            const input = document.getElementById('location-search');\n            if (!input) return;\n\n            const autocomplete = new window.google.maps.places.Autocomplete(input, {\n                componentRestrictions: { country: \"us\" }\n            });\n\n            autocomplete.addListener('place_changed', () => {\n                const place = autocomplete.getPlace();\n                if (place.geometry && place.geometry.location) {\n                    setSearchInput(place.formatted_address);\n                    navigateToResults(\n                        place.formatted_address,\n                        {\n                            lat: place.geometry.location.lat(),\n                            lng: place.geometry.location.lng()\n                        }\n                    );\n                }\n            });\n        };\n\n        initializeAutocomplete();\n    }, [isLoaded, navigateToResults]);\n\n    const handleSearch = () => {\n        if (!searchInput || !isLoaded) return;\n\n        const geocoder = new window.google.maps.Geocoder();\n        setLoading(true);\n\n        geocoder.geocode({ address: searchInput }, (results, status) => {\n            setLoading(false);\n            if (status === 'OK' && results[0]) {\n                const location = results[0].geometry.location;\n                navigateToResults(\n                    searchInput,\n                    {\n                        lat: location.lat(),\n                        lng: location.lng()\n                    }\n                );\n            } else {\n                setError('Could not find this location');\n            }\n        });\n    };\n\n    if (loadError) return <div>Error loading Google Maps API. Please try again later.</div>;\n    if (!isLoaded) return <div>Loading Google Maps...</div>;\n\n    return (\n        <div className=\"landing-page\">\n            <div className=\"hero-section\">\n                <h1>Find your next favorite restaurant</h1>\n                <div className=\"main-search\">\n                    <div className=\"search-container\">\n                        <input\n                            id=\"location-search\"\n                            type=\"text\"\n                            placeholder=\"Enter any address...\"\n                            className=\"main-search-input\"\n                            value={searchInput}\n                            onChange={(e) => setSearchInput(e.target.value)}\n                            disabled={loading}\n                        />\n                        <button\n                            className=\"main-search-button\"\n                            disabled={loading}\n                            onClick={handleSearch}\n                        >\n                            <i className=\"fas fa-search\"></i>\n                        </button>\n                    </div>\n\n                    {error && (\n                        <div className=\"error-message\">\n                            {error}\n                            <button\n                                className=\"close-error\"\n                                onClick={() => setError(null)}\n                            >\n                                <i className=\"fas fa-times\"></i>\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <div className=\"categories-section\">\n                <h2>Popular Categories</h2>\n                <div className=\"category-grid\">\n                    <div className=\"category-card\">\n                        <img\n                            src=\"https://images.unsplash.com/photo-1514326640560-7d063ef2aed5?w=400&h=300&q=80\"\n                            alt=\"Fine Dining\"\n                        />\n                        <h3>Fine Dining</h3>\n                    </div>\n                    <div className=\"category-card\">\n                        <img\n                            src=\"https://images.unsplash.com/photo-1565299624946-b28f40a0ae38?w=400&h=300&q=80\"\n                            alt=\"Casual Dining\"\n                        />\n                        <h3>Casual Dining</h3>\n                    </div>\n                    <div className=\"category-card\">\n                        <img\n                            src=\"https://images.unsplash.com/photo-1513185158878-8d8c2a2a3da3?w=400&h=300&q=80\"\n                            alt=\"Fast Food\"\n                        />\n                        <h3>Fast Food</h3>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LandingPage;"],"names":["LandingPage","libraries","useMemo","navigate","useNavigate","searchInput","setSearchInput","useState","loading","setLoading","error","setError","isLoaded","loadError","useLoadScript","googleMapsApiKey","process","mapIds","useEffect","console","navigateToResults","useCallback","address","coordinates","state","searchLocation","initializeAutocomplete","input","document","getElementById","autocomplete","window","google","maps","places","Autocomplete","componentRestrictions","country","addListener","place","getPlace","geometry","location","formatted_address","lat","lng","_jsx","children","_jsxs","className","id","type","placeholder","value","onChange","e","target","disabled","onClick","handleSearch","geocoder","Geocoder","geocode","results","status","src","alt"],"sourceRoot":""}