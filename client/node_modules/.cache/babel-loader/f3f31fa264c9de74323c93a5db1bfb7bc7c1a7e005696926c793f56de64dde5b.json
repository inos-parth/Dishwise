{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useGoogleMap.js\nimport { useState, useCallback } from 'react';\nexport const useGoogleMap = searchLocation => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const initMap = useCallback(async () => {\n    if (!window.google) {\n      throw new Error(\"Google Maps not loaded\");\n    }\n    try {\n      var _searchLocation$coord, _searchLocation$coord2;\n      if (!(searchLocation !== null && searchLocation !== void 0 && (_searchLocation$coord = searchLocation.coordinates) !== null && _searchLocation$coord !== void 0 && _searchLocation$coord.lat) || !(searchLocation !== null && searchLocation !== void 0 && (_searchLocation$coord2 = searchLocation.coordinates) !== null && _searchLocation$coord2 !== void 0 && _searchLocation$coord2.lng)) {\n        throw new Error(\"Invalid location coordinates\");\n      }\n      const coordinates = {\n        lat: searchLocation.coordinates.lat,\n        lng: searchLocation.coordinates.lng\n      };\n      const mapInstance = new window.google.maps.Map(document.getElementById(\"map\"), {\n        center: coordinates,\n        zoom: 14,\n        mapId: \"3d323ae4d3f413fd\"\n      });\n      const service = new window.google.maps.places.PlacesService(mapInstance);\n      const results = await new Promise((resolve, reject) => {\n        service.nearbySearch({\n          location: coordinates,\n          radius: 5000,\n          type: [\"restaurant\"]\n        }, (results, status) => {\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n            resolve(results);\n          } else {\n            reject(new Error(`Places API error: ${status}`));\n          }\n        });\n      });\n      setRestaurants(results);\n      setLoading(false);\n      return results;\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n      throw err;\n    }\n  }, [searchLocation]);\n  return {\n    restaurants,\n    loading,\n    error,\n    initMap\n  };\n};\n_s(useGoogleMap, \"Oc1NHv0S22rVHh3fESgVMqZiA0g=\");","map":{"version":3,"names":["useState","useCallback","useGoogleMap","searchLocation","_s","restaurants","setRestaurants","loading","setLoading","error","setError","initMap","window","google","Error","_searchLocation$coord","_searchLocation$coord2","coordinates","lat","lng","mapInstance","maps","Map","document","getElementById","center","zoom","mapId","service","places","PlacesService","results","Promise","resolve","reject","nearbySearch","location","radius","type","status","PlacesServiceStatus","OK","err","message"],"sources":["/Users/parthsoni/Desktop/dishwise/client/src/hooks/useGoogleMaps.js"],"sourcesContent":["// src/hooks/useGoogleMap.js\nimport { useState, useCallback } from 'react';\n\nexport const useGoogleMap = (searchLocation) => {\n    const [restaurants, setRestaurants] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const initMap = useCallback(async () => {\n        if (!window.google) {\n            throw new Error(\"Google Maps not loaded\");\n        }\n\n        try {\n            if (!searchLocation?.coordinates?.lat || !searchLocation?.coordinates?.lng) {\n                throw new Error(\"Invalid location coordinates\");\n            }\n\n            const coordinates = {\n                lat: searchLocation.coordinates.lat,\n                lng: searchLocation.coordinates.lng\n            };\n\n            const mapInstance = new window.google.maps.Map(document.getElementById(\"map\"), {\n                center: coordinates,\n                zoom: 14,\n                mapId: \"3d323ae4d3f413fd\"\n            });\n\n            const service = new window.google.maps.places.PlacesService(mapInstance);\n            \n            const results = await new Promise((resolve, reject) => {\n                service.nearbySearch({\n                    location: coordinates,\n                    radius: 5000,\n                    type: [\"restaurant\"]\n                }, (results, status) => {\n                    if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n                        resolve(results);\n                    } else {\n                        reject(new Error(`Places API error: ${status}`));\n                    }\n                });\n            });\n\n            setRestaurants(results);\n            setLoading(false);\n            return results;\n        } catch (err) {\n            setError(err.message);\n            setLoading(false);\n            throw err;\n        }\n    }, [searchLocation]);\n\n    return { restaurants, loading, error, initMap };\n};"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,OAAO,MAAMC,YAAY,GAAIC,cAAc,IAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,OAAO,GAAGV,WAAW,CAAC,YAAY;IACpC,IAAI,CAACW,MAAM,CAACC,MAAM,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC7C;IAEA,IAAI;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MACA,IAAI,EAACb,cAAc,aAAdA,cAAc,gBAAAY,qBAAA,GAAdZ,cAAc,CAAEc,WAAW,cAAAF,qBAAA,eAA3BA,qBAAA,CAA6BG,GAAG,KAAI,EAACf,cAAc,aAAdA,cAAc,gBAAAa,sBAAA,GAAdb,cAAc,CAAEc,WAAW,cAAAD,sBAAA,eAA3BA,sBAAA,CAA6BG,GAAG,GAAE;QACxE,MAAM,IAAIL,KAAK,CAAC,8BAA8B,CAAC;MACnD;MAEA,MAAMG,WAAW,GAAG;QAChBC,GAAG,EAAEf,cAAc,CAACc,WAAW,CAACC,GAAG;QACnCC,GAAG,EAAEhB,cAAc,CAACc,WAAW,CAACE;MACpC,CAAC;MAED,MAAMC,WAAW,GAAG,IAAIR,MAAM,CAACC,MAAM,CAACQ,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;QAC3EC,MAAM,EAAER,WAAW;QACnBS,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACX,CAAC,CAAC;MAEF,MAAMC,OAAO,GAAG,IAAIhB,MAAM,CAACC,MAAM,CAACQ,IAAI,CAACQ,MAAM,CAACC,aAAa,CAACV,WAAW,CAAC;MAExE,MAAMW,OAAO,GAAG,MAAM,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACnDN,OAAO,CAACO,YAAY,CAAC;UACjBC,QAAQ,EAAEnB,WAAW;UACrBoB,MAAM,EAAE,IAAI;UACZC,IAAI,EAAE,CAAC,YAAY;QACvB,CAAC,EAAE,CAACP,OAAO,EAAEQ,MAAM,KAAK;UACpB,IAAIA,MAAM,KAAK3B,MAAM,CAACC,MAAM,CAACQ,IAAI,CAACQ,MAAM,CAACW,mBAAmB,CAACC,EAAE,EAAE;YAC7DR,OAAO,CAACF,OAAO,CAAC;UACpB,CAAC,MAAM;YACHG,MAAM,CAAC,IAAIpB,KAAK,CAAC,qBAAqByB,MAAM,EAAE,CAAC,CAAC;UACpD;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;MAEFjC,cAAc,CAACyB,OAAO,CAAC;MACvBvB,UAAU,CAAC,KAAK,CAAC;MACjB,OAAOuB,OAAO;IAClB,CAAC,CAAC,OAAOW,GAAG,EAAE;MACVhC,QAAQ,CAACgC,GAAG,CAACC,OAAO,CAAC;MACrBnC,UAAU,CAAC,KAAK,CAAC;MACjB,MAAMkC,GAAG;IACb;EACJ,CAAC,EAAE,CAACvC,cAAc,CAAC,CAAC;EAEpB,OAAO;IAAEE,WAAW;IAAEE,OAAO;IAAEE,KAAK;IAAEE;EAAQ,CAAC;AACnD,CAAC;AAACP,EAAA,CArDWF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}