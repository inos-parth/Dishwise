{"ast":null,"code":"var _jsxFileName = \"/Users/parthsoni/Desktop/dishwise/client/src/components/LocationSearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LocationSearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationSearchBar = ({\n  onLocationSelect\n}) => {\n  _s();\n  var _window$google2;\n  const [searchInput, setSearchInput] = useState('');\n  const [showLocationOptions, setShowLocationOptions] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        try {\n          if (!window.google || !window.google.maps) return;\n          const geocoder = new window.google.maps.Geocoder();\n          geocoder.geocode({\n            location: {\n              lat: latitude,\n              lng: longitude\n            }\n          }, (results, status) => {\n            if (status === 'OK' && results[0]) {\n              setSearchInput(results[0].formatted_address);\n              setShowLocationOptions(false);\n              onLocationSelect === null || onLocationSelect === void 0 ? void 0 : onLocationSelect({\n                address: results[0].formatted_address,\n                coordinates: {\n                  lat: latitude,\n                  lng: longitude\n                }\n              });\n            }\n          });\n        } catch (error) {\n          console.error(\"Error getting location:\", error);\n        }\n      }, error => {\n        console.error(\"Error getting location:\", error);\n      });\n    }\n  };\n  useEffect(() => {\n    if (!window.google || !window.google.maps) return;\n    const input = document.getElementById('location-search-input');\n    if (!input) return;\n    try {\n      const autocomplete = new window.google.maps.places.Autocomplete(input, {\n        componentRestrictions: {\n          country: \"us\"\n        }\n      });\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        if (place.geometry && place.geometry.location) {\n          const lat = place.geometry.location.lat();\n          const lng = place.geometry.location.lng();\n          setSearchInput(place.formatted_address);\n          setShowLocationOptions(false);\n          onLocationSelect === null || onLocationSelect === void 0 ? void 0 : onLocationSelect({\n            address: place.formatted_address,\n            coordinates: {\n              lat,\n              lng\n            },\n            placeDetails: place\n          });\n        }\n      });\n      return () => {\n        window.google.maps.event.clearInstanceListeners(autocomplete);\n      };\n    } catch (error) {\n      console.error('Error initializing autocomplete:', error);\n    }\n  }, [isLoaded, onLocationSelect]);\n  const handleInputChange = e => {\n    setSearchInput(e.target.value);\n  };\n  const handleFocus = () => {\n    setShowLocationOptions(true);\n  };\n  const handleBlur = () => {\n    setTimeout(() => setShowLocationOptions(false), 200);\n  };\n  useEffect(() => {\n    var _window$google;\n    setIsLoaded(!!((_window$google = window.google) !== null && _window$google !== void 0 && _window$google.maps));\n  }, [(_window$google2 = window.google) === null || _window$google2 === void 0 ? void 0 : _window$google2.maps]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-search search-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"location-search-input\",\n        type: \"text\",\n        value: searchInput,\n        onChange: handleInputChange,\n        onFocus: handleFocus,\n        onBlur: handleBlur,\n        placeholder: \"Enter any address, place, or landmark...\",\n        className: \"location-search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), showLocationOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"use-current-location\",\n        onClick: getCurrentLocation,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-location-arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), \"Use current location\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-divider\",\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-prompt\",\n        children: \"Enter any address, place, neighborhood, or landmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationSearchBar, \"yGLQeoiaWllWZ5r6Ag1FCi0EFKM=\");\n_c = LocationSearchBar;\nexport default LocationSearchBar;\nvar _c;\n$RefreshReg$(_c, \"LocationSearchBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LocationSearchBar","onLocationSelect","_s","_window$google2","searchInput","setSearchInput","showLocationOptions","setShowLocationOptions","isLoaded","setIsLoaded","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","window","google","maps","geocoder","Geocoder","geocode","location","lat","lng","results","status","formatted_address","address","coordinates","error","console","input","document","getElementById","autocomplete","places","Autocomplete","componentRestrictions","country","addListener","place","getPlace","geometry","placeDetails","event","clearInstanceListeners","handleInputChange","e","target","value","handleFocus","handleBlur","setTimeout","_window$google","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","onFocus","onBlur","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/parthsoni/Desktop/dishwise/client/src/components/LocationSearchBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './LocationSearchBar.css';\n\nconst LocationSearchBar = ({ onLocationSelect }) => {\n  const [searchInput, setSearchInput] = useState('');\n  const [showLocationOptions, setShowLocationOptions] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        async (position) => {\n          const { latitude, longitude } = position.coords;\n          try {\n            if (!window.google || !window.google.maps) return;\n            \n            const geocoder = new window.google.maps.Geocoder();\n            geocoder.geocode(\n              { location: { lat: latitude, lng: longitude } },\n              (results, status) => {\n                if (status === 'OK' && results[0]) {\n                  setSearchInput(results[0].formatted_address);\n                  setShowLocationOptions(false);\n                  onLocationSelect?.({\n                    address: results[0].formatted_address,\n                    coordinates: { lat: latitude, lng: longitude }\n                  });\n                }\n              }\n            );\n          } catch (error) {\n            console.error(\"Error getting location:\", error);\n          }\n        },\n        (error) => {\n          console.error(\"Error getting location:\", error);\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (!window.google || !window.google.maps) return;\n\n    const input = document.getElementById('location-search-input');\n    if (!input) return;\n\n    try {\n      const autocomplete = new window.google.maps.places.Autocomplete(input, {\n        componentRestrictions: { country: \"us\" }\n      });\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        if (place.geometry && place.geometry.location) {\n          const lat = place.geometry.location.lat();\n          const lng = place.geometry.location.lng();\n          \n          setSearchInput(place.formatted_address);\n          setShowLocationOptions(false);\n          \n          onLocationSelect?.({\n            address: place.formatted_address,\n            coordinates: { lat, lng },\n            placeDetails: place\n          });\n        }\n      });\n\n      return () => {\n        window.google.maps.event.clearInstanceListeners(autocomplete);\n      };\n    } catch (error) {\n      console.error('Error initializing autocomplete:', error);\n    }\n  }, [isLoaded, onLocationSelect]);\n\n  const handleInputChange = (e) => {\n    setSearchInput(e.target.value);\n  };\n\n  const handleFocus = () => {\n    setShowLocationOptions(true);\n  };\n\n  const handleBlur = () => {\n    setTimeout(() => setShowLocationOptions(false), 200);\n  };\n\n  useEffect(() => {\n    setIsLoaded(!!window.google?.maps);\n  }, [window.google?.maps]);\n\n  return (\n    <div className=\"location-search-container\">\n      <div className=\"search-input-wrapper\">\n        <i className=\"fas fa-search search-icon\"></i>\n        <input\n          id=\"location-search-input\"\n          type=\"text\"\n          value={searchInput}\n          onChange={handleInputChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          placeholder=\"Enter any address, place, or landmark...\"\n          className=\"location-search-input\"\n        />\n      </div>\n      \n      {showLocationOptions && (\n        <div className=\"location-options\">\n          <button \n            className=\"use-current-location\"\n            onClick={getCurrentLocation}\n          >\n            <i className=\"fas fa-location-arrow\"></i>\n            Use current location\n          </button>\n          <div className=\"location-divider\">or</div>\n          <div className=\"search-prompt\">\n            Enter any address, place, neighborhood, or landmark\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LocationSearchBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}