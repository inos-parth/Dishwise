{"ast":null,"code":"var _jsxFileName = \"/Users/parthsoni/Desktop/dishwise/client/src/pages/Settings.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Settings.css';\nimport { useTheme } from '../context/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const {\n    darkMode,\n    toggleDarkMode\n  } = useTheme();\n  const [settings, setSettings] = useState({\n    language: 'english'\n  });\n  const handleChange = setting => {\n    if (setting === 'darkMode') {\n      const newDarkMode = !settings.darkMode;\n      // Store in localStorage\n      localStorage.setItem('darkMode', newDarkMode);\n      // Apply theme\n      document.documentElement.setAttribute('data-theme', newDarkMode ? 'dark' : 'light');\n    }\n    setSettings(prev => ({\n      ...prev,\n      [setting]: !prev[setting]\n    }));\n  };\n\n  // Set initial theme on component mount\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', settings.darkMode ? 'dark' : 'light');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Choose your preferred language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: settings.language,\n            onChange: e => setSettings({\n              ...settings,\n              language: e.target.value\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"english\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Dark Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Switch between light and dark theme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: darkMode,\n              onChange: toggleDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"xxpg6egoQSZ6bTQoGgrHAcF3QXU=\", false, function () {\n  return [useTheme];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useTheme","jsxDEV","_jsxDEV","Settings","_s","darkMode","toggleDarkMode","settings","setSettings","useState","language","handleChange","setting","newDarkMode","localStorage","setItem","document","documentElement","setAttribute","prev","useEffect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","checked","_c","$RefreshReg$"],"sources":["/Users/parthsoni/Desktop/dishwise/client/src/pages/Settings.jsx"],"sourcesContent":["import React from 'react';\nimport './Settings.css';\nimport { useTheme } from '../context/ThemeContext';\n\nconst Settings = () => {\n  const { darkMode, toggleDarkMode } = useTheme();\n  const [settings, setSettings] = useState({\n    language: 'english'\n  });\n\n\n  const handleChange = (setting) => {\n    if (setting === 'darkMode') {\n      const newDarkMode = !settings.darkMode;\n      // Store in localStorage\n      localStorage.setItem('darkMode', newDarkMode);\n      // Apply theme\n      document.documentElement.setAttribute('data-theme', newDarkMode ? 'dark' : 'light');\n    }\n    \n    setSettings(prev => ({\n      ...prev,\n      [setting]: !prev[setting]\n    }));\n  };\n\n  // Set initial theme on component mount\n  useEffect(() => {\n    document.documentElement.setAttribute(\n      'data-theme', \n      settings.darkMode ? 'dark' : 'light'\n    );\n  }, []);\n\n  return (\n    <div className=\"settings-page\">\n      <div className=\"settings-container\">\n        <h1>Settings</h1>\n        <div className=\"settings-section\">\n          <h2>Preferences</h2>\n          <div className=\"setting-item\">\n            <div className=\"setting-info\">\n              <h3>Language</h3>\n              <p>Choose your preferred language</p>\n            </div>\n            <select \n              value={settings.language}\n              onChange={(e) => setSettings({...settings, language: e.target.value})}\n            >\n              <option value=\"english\">English</option>\n            </select>\n          </div>\n          <div className=\"setting-item\">\n            <div className=\"setting-info\">\n              <h3>Dark Mode</h3>\n              <p>Switch between light and dark theme</p>\n            </div>\n            <label className=\"switch\">\n              <input\n                type=\"checkbox\"\n                checked={darkMode}\n                onChange={toggleDarkMode}\n              />\n              <span className=\"slider\"></span>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}