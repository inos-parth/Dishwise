{"ast":null,"code":"var _jsxFileName = \"/Users/parthsoni/Desktop/dishwise/client/src/pages/MenuPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"./MenuPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuPage = () => {\n  _s();\n  var _selectedDish$average;\n  const {\n    placeId\n  } = useParams();\n  const navigate = useNavigate();\n  const [menuData, setMenuData] = useState([]);\n  const [restaurant, setRestaurant] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const [selectedDish, setSelectedDish] = useState(null);\n\n  // States for rating and reviews\n  const [currentRating, setCurrentRating] = useState(0);\n  const [reviewText, setReviewText] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch Menu Data\n        const menuResponse = await fetch(`http://localhost:8000/api/restaurants/menu/${placeId}`);\n        const menuData = await menuResponse.json();\n        if (menuResponse.ok && menuData.menu) {\n          setMenuData(menuData.menu);\n          setRestaurant(menuData.restaurant);\n        } else {\n          setError(\"Menu not available\");\n        }\n\n        // Fetch User's Favorites\n        const token = localStorage.getItem(\"token\");\n        const favoritesResponse = await fetch(`http://localhost:8000/api/favorites`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const favoritesData = await favoritesResponse.json();\n        if (favoritesResponse.ok) {\n          setFavorites(favoritesData); // Set user's favorite dishes\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setError(\"Failed to load menu\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [placeId]);\n  const handleFavorite = async dish => {\n    const token = localStorage.getItem(\"token\");\n    const isFavorite = favorites.some(fav => fav.dishId === dish._id);\n    try {\n      const response = await fetch(`http://localhost:8000/api/auth/favorites/${isFavorite ? \"remove\" : \"add\"}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          dishId: dish._id,\n          name: dish.name,\n          price: dish.price,\n          image: dish.imageUrl\n        })\n      });\n      const updatedFavorites = await response.json();\n      if (response.ok) {\n        setFavorites(updatedFavorites.favorites);\n      } else {\n        alert(updatedFavorites.msg || \"Failed to update favorites.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating favorites:\", error);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n  const handlePageChange = direction => {\n    if (selectedDish) {\n      const totalPages = Math.ceil((selectedDish.reviews || []).length / 3);\n      const nextPage = selectedDish.currentPage + direction;\n      if (nextPage >= 0 && nextPage < totalPages) {\n        setSelectedDish({\n          ...selectedDish,\n          currentPage: nextPage\n        });\n      }\n    }\n  };\n  const handleOpenModal = dish => {\n    setSelectedDish(dish); // Set the selected dish for the modal\n  };\n  const handleRatingChange = rating => {\n    setCurrentRating(rating); // `currentRating` is a new state to track selected stars\n  };\n  const submitReview = async () => {\n    if (!reviewText.trim()) {\n      alert('Review text cannot be empty.');\n      return;\n    }\n    if (currentRating === 0) {\n      alert('Please select a rating before submitting.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/restaurants/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          placeId: placeId,\n          // Use the correct `placeId` from state or params\n          dishName: selectedDish.name,\n          rating: currentRating,\n          review: reviewText\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit review');\n      }\n      const updatedDish = await response.json(); // Get the updated dish data\n\n      // Update the `menuData` state with the updated dish\n      setMenuData(prevMenuData => prevMenuData.map(dish => dish.name === updatedDish.name ? updatedDish : dish));\n\n      // Update the `selectedDish` to reflect the changes in the modal\n      setSelectedDish(prevDish => ({\n        ...prevDish,\n        averageRating: updatedDish.averageRating,\n        totalReviews: updatedDish.totalReviews,\n        reviews: updatedDish.reviews // Update reviews dynamically\n      }));\n\n      // Clear the review text and rating after submission\n      setReviewText('');\n      setCurrentRating(0);\n      alert('Review submitted successfully!');\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      alert('An error occurred while submitting the review. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"back-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-arrow-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), \" Back to Results\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [(restaurant === null || restaurant === void 0 ? void 0 : restaurant.name) || \"Restaurant\", \" Menu\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-content\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading menu...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 27\n      }, this), menuData.map((item, index) => {\n        const isFavorite = favorites.some(fav => fav.dishId === item._id); // Calculate isFavorite here\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.imageUrl,\n            alt: item.name,\n            className: \"menu-card-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"menu-card-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"menu-card-name\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"menu-card-price\",\n              children: [\"$\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"menu-card-reviews-button\",\n              onClick: () => setSelectedDish(item),\n              children: \"Reviews\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `favorite-button ${isFavorite ? \"favorited\" : \"\"}`,\n              onClick: () => handleFavorite(item),\n              children: isFavorite ? \"★ Favorited\" : \"☆ Add to Favorites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), selectedDish && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-close\",\n          onClick: () => setSelectedDish(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedDish.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [((_selectedDish$average = selectedDish.averageRating) === null || _selectedDish$average === void 0 ? void 0 : _selectedDish$average.toFixed(1)) || 0, \" / \", selectedDish.totalReviews || 0, \" reviews\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-reviews\",\n          children: [selectedDish.reviews.length > 0 ? selectedDish.reviews.slice(selectedDish.currentPage * 3, selectedDish.currentPage * 3 + 3).map((review, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: review.user || \"Anonymous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 45\n            }, this), \": \", review.text, \" (\", review.rating, \" stars)\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 41\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No reviews yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePageChange(-1),\n              disabled: selectedDish.currentPage === 0,\n              children: \"\\u2190 Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePageChange(1),\n              disabled: (selectedDish.currentPage + 1) * 3 >= (selectedDish.reviews || []).length,\n              children: \"Next \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-add-review\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add a Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Write a review...\",\n            className: \"review-textarea\",\n            value: reviewText // Bind the textarea to reviewText state\n            ,\n            onChange: e => setReviewText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-stars\",\n            children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `fas fa-star ${currentRating >= star ? 'selected' : ''}`,\n              onClick: () => handleRatingChange(star)\n            }, star, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-review-button\",\n            onClick: submitReview,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n_s(MenuPage, \"MPpKBSoN5v96UOE1WHyKzDdDpHw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MenuPage;\nexport default MenuPage;\nvar _c;\n$RefreshReg$(_c, \"MenuPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","MenuPage","_s","_selectedDish$average","placeId","navigate","menuData","setMenuData","restaurant","setRestaurant","loading","setLoading","error","setError","favorites","setFavorites","selectedDish","setSelectedDish","currentRating","setCurrentRating","reviewText","setReviewText","fetchData","menuResponse","fetch","json","ok","menu","token","localStorage","getItem","favoritesResponse","headers","Authorization","favoritesData","console","handleFavorite","dish","isFavorite","some","fav","dishId","_id","response","method","body","JSON","stringify","name","price","image","imageUrl","updatedFavorites","alert","msg","handlePageChange","direction","totalPages","Math","ceil","reviews","length","nextPage","currentPage","handleOpenModal","handleRatingChange","rating","submitReview","trim","dishName","review","Error","updatedDish","prevMenuData","map","prevDish","averageRating","totalReviews","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","item","index","src","alt","toFixed","slice","i","user","text","disabled","placeholder","value","onChange","e","target","star","_c","$RefreshReg$"],"sources":["/Users/parthsoni/Desktop/dishwise/client/src/pages/MenuPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"./MenuPage.css\";\n\nconst MenuPage = () => {\n    const { placeId } = useParams();\n    const navigate = useNavigate();\n    const [menuData, setMenuData] = useState([]);\n    const [restaurant, setRestaurant] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [favorites, setFavorites] = useState([]);\n    const [selectedDish, setSelectedDish] = useState(null);\n\n    // States for rating and reviews\n    const [currentRating, setCurrentRating] = useState(0);\n    const [reviewText, setReviewText] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n\n                // Fetch Menu Data\n                const menuResponse = await fetch(`http://localhost:8000/api/restaurants/menu/${placeId}`);\n                const menuData = await menuResponse.json();\n                if (menuResponse.ok && menuData.menu) {\n                    setMenuData(menuData.menu);\n                    setRestaurant(menuData.restaurant);\n                } else {\n                    setError(\"Menu not available\");\n                }\n\n                // Fetch User's Favorites\n                const token = localStorage.getItem(\"token\");\n                const favoritesResponse = await fetch(`http://localhost:8000/api/favorites`, {\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n                const favoritesData = await favoritesResponse.json();\n                if (favoritesResponse.ok) {\n                    setFavorites(favoritesData); // Set user's favorite dishes\n                }\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n                setError(\"Failed to load menu\");\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [placeId]);\n\n\n    const handleFavorite = async (dish) => {\n        const token = localStorage.getItem(\"token\");\n        const isFavorite = favorites.some((fav) => fav.dishId === dish._id);\n\n        try {\n            const response = await fetch(\n                `http://localhost:8000/api/auth/favorites/${isFavorite ? \"remove\" : \"add\"}`,\n                {\n                    method: \"PUT\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    },\n                    body: JSON.stringify({\n                        dishId: dish._id,\n                        name: dish.name,\n                        price: dish.price,\n                        image: dish.imageUrl,\n                    }),\n                }\n            );\n\n            const updatedFavorites = await response.json();\n            if (response.ok) {\n                setFavorites(updatedFavorites.favorites);\n            } else {\n                alert(updatedFavorites.msg || \"Failed to update favorites.\");\n            }\n        } catch (error) {\n            console.error(\"Error updating favorites:\", error);\n            alert(\"An error occurred. Please try again.\");\n        }\n    };\n\n\n    const handlePageChange = (direction) => {\n        if (selectedDish) {\n            const totalPages = Math.ceil((selectedDish.reviews || []).length / 3);\n            const nextPage = selectedDish.currentPage + direction;\n\n            if (nextPage >= 0 && nextPage < totalPages) {\n                setSelectedDish({ ...selectedDish, currentPage: nextPage });\n            }\n        }\n    };\n\n    const handleOpenModal = (dish) => {\n        setSelectedDish(dish); // Set the selected dish for the modal\n    };\n\n    const handleRatingChange = (rating) => {\n        setCurrentRating(rating); // `currentRating` is a new state to track selected stars\n    };\n\n    const submitReview = async () => {\n        if (!reviewText.trim()) {\n            alert('Review text cannot be empty.');\n            return;\n        }\n        if (currentRating === 0) {\n            alert('Please select a rating before submitting.');\n            return;\n        }\n\n        try {\n            const response = await fetch('http://localhost:8000/api/restaurants/reviews', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    placeId: placeId, // Use the correct `placeId` from state or params\n                    dishName: selectedDish.name,\n                    rating: currentRating,\n                    review: reviewText,\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to submit review');\n            }\n\n            const updatedDish = await response.json(); // Get the updated dish data\n\n            // Update the `menuData` state with the updated dish\n            setMenuData((prevMenuData) =>\n                prevMenuData.map((dish) =>\n                    dish.name === updatedDish.name ? updatedDish : dish\n                )\n            );\n\n            // Update the `selectedDish` to reflect the changes in the modal\n            setSelectedDish((prevDish) => ({\n                ...prevDish,\n                averageRating: updatedDish.averageRating,\n                totalReviews: updatedDish.totalReviews,\n                reviews: updatedDish.reviews, // Update reviews dynamically\n            }));\n\n            // Clear the review text and rating after submission\n            setReviewText('');\n            setCurrentRating(0);\n            alert('Review submitted successfully!');\n        } catch (error) {\n            console.error('Error submitting review:', error);\n            alert('An error occurred while submitting the review. Please try again.');\n        }\n    };\n\n\n    return (\n        <div className=\"menu-page\">\n            <div className=\"menu-header\">\n                <button onClick={() => navigate(-1)} className=\"back-button\">\n                    <i className=\"fas fa-arrow-left\"></i> Back to Results\n                </button>\n                <h1>{restaurant?.name || \"Restaurant\"} Menu</h1>\n            </div>\n\n            <div className=\"menu-content\">\n                {loading && <div className=\"loading\">Loading menu...</div>}\n                {error && <div className=\"error-message\">{error}</div>}\n\n                {menuData.map((item, index) => {\n    const isFavorite = favorites.some((fav) => fav.dishId === item._id); // Calculate isFavorite here\n    return (\n        <div key={index} className=\"menu-card\">\n            <img src={item.imageUrl} alt={item.name} className=\"menu-card-image\" />\n            <div className=\"menu-card-info\">\n                <h2 className=\"menu-card-name\">{item.name}</h2>\n                <p className=\"menu-card-price\">${item.price}</p>\n                <button\n                    className=\"menu-card-reviews-button\"\n                    onClick={() => setSelectedDish(item)}\n                >\n                    Reviews\n                </button>\n                <button\n                    className={`favorite-button ${isFavorite ? \"favorited\" : \"\"}`}\n                    onClick={() => handleFavorite(item)}\n                >\n                    {isFavorite ? \"★ Favorited\" : \"☆ Add to Favorites\"}\n                </button>\n            </div>\n        </div>\n    );\n})}\n\n            </div>\n\n            {selectedDish && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <button className=\"modal-close\" onClick={() => setSelectedDish(null)}>\n                            ×\n                        </button>\n                        <h2>{selectedDish.name}</h2>\n                        <p>\n                            {selectedDish.averageRating?.toFixed(1) || 0} / {selectedDish.totalReviews || 0} reviews\n                        </p>\n                        <div className=\"modal-reviews\">\n                            {selectedDish.reviews.length > 0 ? (\n                                selectedDish.reviews\n                                    .slice(\n                                        selectedDish.currentPage * 3,\n                                        selectedDish.currentPage * 3 + 3\n                                    )\n                                    .map((review, i) => (\n                                        <div key={i} className=\"modal-review-item\">\n                                            <strong>{review.user || \"Anonymous\"}</strong>: {review.text} ({review.rating} stars)\n                                        </div>\n                                    ))\n                            ) : (\n                                <p>No reviews yet.</p>\n                            )}\n                            <div className=\"pagination\">\n                                <button\n                                    onClick={() => handlePageChange(-1)}\n                                    disabled={selectedDish.currentPage === 0}\n                                >\n                                    &#8592; Previous\n                                </button>\n                                <button\n                                    onClick={() => handlePageChange(1)}\n                                    disabled={\n                                        (selectedDish.currentPage + 1) * 3 >= (selectedDish.reviews || []).length\n                                    }\n                                >\n                                    Next &#8594;\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"modal-add-review\">\n                            <h3>Add a Review</h3>\n                            <textarea\n                                placeholder=\"Write a review...\"\n                                className=\"review-textarea\"\n                                value={reviewText} // Bind the textarea to reviewText state\n                                onChange={(e) => setReviewText(e.target.value)}\n                            ></textarea>\n                            <div className=\"rating-stars\">\n                                {[1, 2, 3, 4, 5].map((star) => (\n                                    <i\n                                        key={star}\n                                        className={`fas fa-star ${currentRating >= star ? 'selected' : ''}`}\n                                        onClick={() => handleRatingChange(star)}\n                                    ></i>\n                                ))}\n                            </div>\n                            <button\n                                className=\"submit-review-button\"\n                                onClick={submitReview}\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MenuPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACnB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC/B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAM0B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACAX,UAAU,CAAC,IAAI,CAAC;;QAEhB;QACA,MAAMY,YAAY,GAAG,MAAMC,KAAK,CAAC,8CAA8CpB,OAAO,EAAE,CAAC;QACzF,MAAME,QAAQ,GAAG,MAAMiB,YAAY,CAACE,IAAI,CAAC,CAAC;QAC1C,IAAIF,YAAY,CAACG,EAAE,IAAIpB,QAAQ,CAACqB,IAAI,EAAE;UAClCpB,WAAW,CAACD,QAAQ,CAACqB,IAAI,CAAC;UAC1BlB,aAAa,CAACH,QAAQ,CAACE,UAAU,CAAC;QACtC,CAAC,MAAM;UACHK,QAAQ,CAAC,oBAAoB,CAAC;QAClC;;QAEA;QACA,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,iBAAiB,GAAG,MAAMP,KAAK,CAAC,qCAAqC,EAAE;UACzEQ,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUL,KAAK;UAAG;QAChD,CAAC,CAAC;QACF,MAAMM,aAAa,GAAG,MAAMH,iBAAiB,CAACN,IAAI,CAAC,CAAC;QACpD,IAAIM,iBAAiB,CAACL,EAAE,EAAE;UACtBX,YAAY,CAACmB,aAAa,CAAC,CAAC,CAAC;QACjC;MACJ,CAAC,CAAC,OAAOtB,KAAK,EAAE;QACZuB,OAAO,CAACvB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAAC,qBAAqB,CAAC;MACnC,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDW,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAAClB,OAAO,CAAC,CAAC;EAGb,MAAMgC,cAAc,GAAG,MAAOC,IAAI,IAAK;IACnC,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMQ,UAAU,GAAGxB,SAAS,CAACyB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,MAAM,KAAKJ,IAAI,CAACK,GAAG,CAAC;IAEnE,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CACxB,4CAA4Cc,UAAU,GAAG,QAAQ,GAAG,KAAK,EAAE,EAC3E;QACIM,MAAM,EAAE,KAAK;QACbZ,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUL,KAAK;QAClC,CAAC;QACDiB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBN,MAAM,EAAEJ,IAAI,CAACK,GAAG;UAChBM,IAAI,EAAEX,IAAI,CAACW,IAAI;UACfC,KAAK,EAAEZ,IAAI,CAACY,KAAK;UACjBC,KAAK,EAAEb,IAAI,CAACc;QAChB,CAAC;MACL,CACJ,CAAC;MAED,MAAMC,gBAAgB,GAAG,MAAMT,QAAQ,CAAClB,IAAI,CAAC,CAAC;MAC9C,IAAIkB,QAAQ,CAACjB,EAAE,EAAE;QACbX,YAAY,CAACqC,gBAAgB,CAACtC,SAAS,CAAC;MAC5C,CAAC,MAAM;QACHuC,KAAK,CAACD,gBAAgB,CAACE,GAAG,IAAI,6BAA6B,CAAC;MAChE;IACJ,CAAC,CAAC,OAAO1C,KAAK,EAAE;MACZuB,OAAO,CAACvB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDyC,KAAK,CAAC,sCAAsC,CAAC;IACjD;EACJ,CAAC;EAGD,MAAME,gBAAgB,GAAIC,SAAS,IAAK;IACpC,IAAIxC,YAAY,EAAE;MACd,MAAMyC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAAC,CAAC3C,YAAY,CAAC4C,OAAO,IAAI,EAAE,EAAEC,MAAM,GAAG,CAAC,CAAC;MACrE,MAAMC,QAAQ,GAAG9C,YAAY,CAAC+C,WAAW,GAAGP,SAAS;MAErD,IAAIM,QAAQ,IAAI,CAAC,IAAIA,QAAQ,GAAGL,UAAU,EAAE;QACxCxC,eAAe,CAAC;UAAE,GAAGD,YAAY;UAAE+C,WAAW,EAAED;QAAS,CAAC,CAAC;MAC/D;IACJ;EACJ,CAAC;EAED,MAAME,eAAe,GAAI3B,IAAI,IAAK;IAC9BpB,eAAe,CAACoB,IAAI,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAM4B,kBAAkB,GAAIC,MAAM,IAAK;IACnC/C,gBAAgB,CAAC+C,MAAM,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAC/C,UAAU,CAACgD,IAAI,CAAC,CAAC,EAAE;MACpBf,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACJ;IACA,IAAInC,aAAa,KAAK,CAAC,EAAE;MACrBmC,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACJ;IAEA,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAMnB,KAAK,CAAC,+CAA+C,EAAE;QAC1EoB,MAAM,EAAE,MAAM;QACdZ,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB3C,OAAO,EAAEA,OAAO;UAAE;UAClBiE,QAAQ,EAAErD,YAAY,CAACgC,IAAI;UAC3BkB,MAAM,EAAEhD,aAAa;UACrBoD,MAAM,EAAElD;QACZ,CAAC;MACL,CAAC,CAAC;MAEF,IAAI,CAACuB,QAAQ,CAACjB,EAAE,EAAE;QACd,MAAM,IAAI6C,KAAK,CAAC,yBAAyB,CAAC;MAC9C;MAEA,MAAMC,WAAW,GAAG,MAAM7B,QAAQ,CAAClB,IAAI,CAAC,CAAC,CAAC,CAAC;;MAE3C;MACAlB,WAAW,CAAEkE,YAAY,IACrBA,YAAY,CAACC,GAAG,CAAErC,IAAI,IAClBA,IAAI,CAACW,IAAI,KAAKwB,WAAW,CAACxB,IAAI,GAAGwB,WAAW,GAAGnC,IACnD,CACJ,CAAC;;MAED;MACApB,eAAe,CAAE0D,QAAQ,KAAM;QAC3B,GAAGA,QAAQ;QACXC,aAAa,EAAEJ,WAAW,CAACI,aAAa;QACxCC,YAAY,EAAEL,WAAW,CAACK,YAAY;QACtCjB,OAAO,EAAEY,WAAW,CAACZ,OAAO,CAAE;MAClC,CAAC,CAAC,CAAC;;MAEH;MACAvC,aAAa,CAAC,EAAE,CAAC;MACjBF,gBAAgB,CAAC,CAAC,CAAC;MACnBkC,KAAK,CAAC,gCAAgC,CAAC;IAC3C,CAAC,CAAC,OAAOzC,KAAK,EAAE;MACZuB,OAAO,CAACvB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDyC,KAAK,CAAC,kEAAkE,CAAC;IAC7E;EACJ,CAAC;EAGD,oBACIrD,OAAA;IAAK8E,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB/E,OAAA;MAAK8E,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxB/E,OAAA;QAAQgF,OAAO,EAAEA,CAAA,KAAM3E,QAAQ,CAAC,CAAC,CAAC,CAAE;QAACyE,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxD/E,OAAA;UAAG8E,SAAS,EAAC;QAAmB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,oBACzC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpF,OAAA;QAAA+E,QAAA,GAAK,CAAAvE,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEwC,IAAI,KAAI,YAAY,EAAC,OAAK;MAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eAENpF,OAAA;MAAK8E,SAAS,EAAC,cAAc;MAAAC,QAAA,GACxBrE,OAAO,iBAAIV,OAAA;QAAK8E,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACzDxE,KAAK,iBAAIZ,OAAA;QAAK8E,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEnE;MAAK;QAAAqE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAErD9E,QAAQ,CAACoE,GAAG,CAAC,CAACW,IAAI,EAAEC,KAAK,KAAK;QAC3C,MAAMhD,UAAU,GAAGxB,SAAS,CAACyB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,MAAM,KAAK4C,IAAI,CAAC3C,GAAG,CAAC,CAAC,CAAC;QACrE,oBACI1C,OAAA;UAAiB8E,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAClC/E,OAAA;YAAKuF,GAAG,EAAEF,IAAI,CAAClC,QAAS;YAACqC,GAAG,EAAEH,IAAI,CAACrC,IAAK;YAAC8B,SAAS,EAAC;UAAiB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvEpF,OAAA;YAAK8E,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3B/E,OAAA;cAAI8E,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAAEM,IAAI,CAACrC;YAAI;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC/CpF,OAAA;cAAG8E,SAAS,EAAC,iBAAiB;cAAAC,QAAA,GAAC,GAAC,EAACM,IAAI,CAACpC,KAAK;YAAA;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChDpF,OAAA;cACI8E,SAAS,EAAC,0BAA0B;cACpCE,OAAO,EAAEA,CAAA,KAAM/D,eAAe,CAACoE,IAAI,CAAE;cAAAN,QAAA,EACxC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTpF,OAAA;cACI8E,SAAS,EAAE,mBAAmBxC,UAAU,GAAG,WAAW,GAAG,EAAE,EAAG;cAC9D0C,OAAO,EAAEA,CAAA,KAAM5C,cAAc,CAACiD,IAAI,CAAE;cAAAN,QAAA,EAEnCzC,UAAU,GAAG,aAAa,GAAG;YAAoB;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA,GAjBAE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBV,CAAC;MAEd,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEe,CAAC,EAELpE,YAAY,iBACThB,OAAA;MAAK8E,SAAS,EAAC,OAAO;MAAAC,QAAA,eAClB/E,OAAA;QAAK8E,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1B/E,OAAA;UAAQ8E,SAAS,EAAC,aAAa;UAACE,OAAO,EAAEA,CAAA,KAAM/D,eAAe,CAAC,IAAI,CAAE;UAAA8D,QAAA,EAAC;QAEtE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTpF,OAAA;UAAA+E,QAAA,EAAK/D,YAAY,CAACgC;QAAI;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5BpF,OAAA;UAAA+E,QAAA,GACK,EAAA5E,qBAAA,GAAAa,YAAY,CAAC4D,aAAa,cAAAzE,qBAAA,uBAA1BA,qBAAA,CAA4BsF,OAAO,CAAC,CAAC,CAAC,KAAI,CAAC,EAAC,KAAG,EAACzE,YAAY,CAAC6D,YAAY,IAAI,CAAC,EAAC,UACpF;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpF,OAAA;UAAK8E,SAAS,EAAC,eAAe;UAAAC,QAAA,GACzB/D,YAAY,CAAC4C,OAAO,CAACC,MAAM,GAAG,CAAC,GAC5B7C,YAAY,CAAC4C,OAAO,CACf8B,KAAK,CACF1E,YAAY,CAAC+C,WAAW,GAAG,CAAC,EAC5B/C,YAAY,CAAC+C,WAAW,GAAG,CAAC,GAAG,CACnC,CAAC,CACAW,GAAG,CAAC,CAACJ,MAAM,EAAEqB,CAAC,kBACX3F,OAAA;YAAa8E,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBACtC/E,OAAA;cAAA+E,QAAA,EAAST,MAAM,CAACsB,IAAI,IAAI;YAAW;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,MAAE,EAACd,MAAM,CAACuB,IAAI,EAAC,IAAE,EAACvB,MAAM,CAACJ,MAAM,EAAC,SACjF;UAAA,GAFUyB,CAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEN,CACR,CAAC,gBAENpF,OAAA;YAAA+E,QAAA,EAAG;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACxB,eACDpF,OAAA;YAAK8E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvB/E,OAAA;cACIgF,OAAO,EAAEA,CAAA,KAAMzB,gBAAgB,CAAC,CAAC,CAAC,CAAE;cACpCuC,QAAQ,EAAE9E,YAAY,CAAC+C,WAAW,KAAK,CAAE;cAAAgB,QAAA,EAC5C;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTpF,OAAA;cACIgF,OAAO,EAAEA,CAAA,KAAMzB,gBAAgB,CAAC,CAAC,CAAE;cACnCuC,QAAQ,EACJ,CAAC9E,YAAY,CAAC+C,WAAW,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC/C,YAAY,CAAC4C,OAAO,IAAI,EAAE,EAAEC,MACtE;cAAAkB,QAAA,EACJ;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNpF,OAAA;UAAK8E,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7B/E,OAAA;YAAA+E,QAAA,EAAI;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBpF,OAAA;YACI+F,WAAW,EAAC,mBAAmB;YAC/BjB,SAAS,EAAC,iBAAiB;YAC3BkB,KAAK,EAAE5E,UAAW,CAAC;YAAA;YACnB6E,QAAQ,EAAGC,CAAC,IAAK7E,aAAa,CAAC6E,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC,eACZpF,OAAA;YAAK8E,SAAS,EAAC,cAAc;YAAAC,QAAA,EACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACL,GAAG,CAAE0B,IAAI,iBACtBpG,OAAA;cAEI8E,SAAS,EAAE,eAAe5D,aAAa,IAAIkF,IAAI,GAAG,UAAU,GAAG,EAAE,EAAG;cACpEpB,OAAO,EAAEA,CAAA,KAAMf,kBAAkB,CAACmC,IAAI;YAAE,GAFnCA,IAAI;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGT,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNpF,OAAA;YACI8E,SAAS,EAAC,sBAAsB;YAChCE,OAAO,EAAEb,YAAa;YAAAY,QAAA,EACzB;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAClF,EAAA,CA/QID,QAAQ;EAAA,QACUJ,SAAS,EACZC,WAAW;AAAA;AAAAuG,EAAA,GAF1BpG,QAAQ;AAiRd,eAAeA,QAAQ;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}