{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useGoogleMap.js\nimport { useState, useCallback, useRef, useEffect } from 'react';\nexport const useGoogleMap = searchLocation => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const markersRef = useRef([]);\n  const mapRef = useRef(null);\n  const clearMarkers = () => {\n    if (markersRef.current) {\n      markersRef.current.forEach(marker => marker.setMap(null));\n      markersRef.current = [];\n    }\n  };\n  const initMap = useCallback(async (filters = {}) => {\n    if (!window.google) {\n      throw new Error(\"Google Maps not loaded\");\n    }\n    try {\n      var _searchLocation$coord, _searchLocation$coord2;\n      clearMarkers();\n      if (!(searchLocation !== null && searchLocation !== void 0 && (_searchLocation$coord = searchLocation.coordinates) !== null && _searchLocation$coord !== void 0 && _searchLocation$coord.lat) || !(searchLocation !== null && searchLocation !== void 0 && (_searchLocation$coord2 = searchLocation.coordinates) !== null && _searchLocation$coord2 !== void 0 && _searchLocation$coord2.lng)) {\n        throw new Error(\"Invalid location coordinates\");\n      }\n      const coordinates = new window.google.maps.LatLng(searchLocation.coordinates.lat, searchLocation.coordinates.lng);\n      mapRef.current = new window.google.maps.Map(document.getElementById(\"map\"), {\n        center: coordinates,\n        zoom: 14,\n        mapId: \"3d323ae4d3f413fd\"\n      });\n      const service = new window.google.maps.places.PlacesService(mapRef.current);\n      const request = {\n        location: coordinates,\n        keyword: `food ${filters.cuisine || \"\"}`.trim(),\n        rankBy: window.google.maps.places.RankBy.DISTANCE\n      };\n      if (filters.openNow) {\n        request.openNow = true;\n      }\n      const results = await new Promise((resolve, reject) => {\n        service.nearbySearch(request, (results, status) => {\n          if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n            resolve(results);\n          } else {\n            reject(new Error(`Places API error: ${status}`));\n          }\n        });\n      });\n\n      // Filter results by minimum rating (if specified)\n      const filteredResults = filters.minRating ? results.filter(place => place.rating >= filters.minRating) : results;\n      filteredResults.forEach(place => {\n        var _place$geometry;\n        if ((_place$geometry = place.geometry) !== null && _place$geometry !== void 0 && _place$geometry.location) {\n          const marker = new window.google.maps.Marker({\n            position: place.geometry.location,\n            map: mapRef.current,\n            title: place.name\n          });\n          const infowindow = new window.google.maps.InfoWindow({\n            content: `\n                                <div>\n                                    <h3>${place.name}</h3>\n                                    <p>${place.vicinity}</p>\n                                    <p>${place.rating ? `${place.rating} ⭐` : \"No rating\"}</p>\n                                </div>\n                            `\n          });\n          marker.addListener(\"click\", () => {\n            infowindow.open(mapRef.current, marker);\n          });\n          markersRef.current.push(marker);\n        }\n      });\n      setRestaurants(filteredResults);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n      throw err;\n    }\n  }, [searchLocation]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      clearMarkers();\n    };\n  }, []);\n  return {\n    restaurants,\n    loading,\n    error,\n    initMap\n  };\n};\n_s(useGoogleMap, \"jafBQvSiGTckAPpnrVSD1xrqk1Y=\");","map":{"version":3,"names":["useState","useCallback","useRef","useEffect","useGoogleMap","searchLocation","_s","restaurants","setRestaurants","loading","setLoading","error","setError","markersRef","mapRef","clearMarkers","current","forEach","marker","setMap","initMap","filters","window","google","Error","_searchLocation$coord","_searchLocation$coord2","coordinates","lat","lng","maps","LatLng","Map","document","getElementById","center","zoom","mapId","service","places","PlacesService","request","location","keyword","cuisine","trim","rankBy","RankBy","DISTANCE","openNow","results","Promise","resolve","reject","nearbySearch","status","PlacesServiceStatus","OK","filteredResults","minRating","filter","place","rating","_place$geometry","geometry","Marker","position","map","title","name","infowindow","InfoWindow","content","vicinity","addListener","open","push","err","message"],"sources":["/Users/riyagolani/Library/Mobile Documents/com~apple~CloudDocs/Documents/Code/Dishwise/client/src/hooks/useGoogleMaps.js"],"sourcesContent":["// src/hooks/useGoogleMap.js\nimport { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useGoogleMap = (searchLocation) => {\n    const [restaurants, setRestaurants] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const markersRef = useRef([]);\n    const mapRef = useRef(null);\n\n    const clearMarkers = () => {\n        if (markersRef.current) {\n            markersRef.current.forEach(marker => marker.setMap(null));\n            markersRef.current = [];\n        }\n    };\n\n    const initMap = useCallback(\n        async (filters = {}) => {\n            if (!window.google) {\n                throw new Error(\"Google Maps not loaded\");\n            }\n    \n            try {\n                clearMarkers();\n    \n                if (!searchLocation?.coordinates?.lat || !searchLocation?.coordinates?.lng) {\n                    throw new Error(\"Invalid location coordinates\");\n                }\n    \n                const coordinates = new window.google.maps.LatLng(\n                    searchLocation.coordinates.lat,\n                    searchLocation.coordinates.lng\n                );\n    \n                mapRef.current = new window.google.maps.Map(document.getElementById(\"map\"), {\n                    center: coordinates,\n                    zoom: 14,\n                    mapId: \"3d323ae4d3f413fd\",\n                });\n    \n                const service = new window.google.maps.places.PlacesService(mapRef.current);\n    \n                const request = {\n                    location: coordinates,\n                    keyword: `food ${filters.cuisine || \"\"}`.trim(),\n                    rankBy: window.google.maps.places.RankBy.DISTANCE,\n                };\n    \n                if (filters.openNow) {\n                    request.openNow = true;\n                }\n    \n                const results = await new Promise((resolve, reject) => {\n                    service.nearbySearch(request, (results, status) => {\n                        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n                            resolve(results);\n                        } else {\n                            reject(new Error(`Places API error: ${status}`));\n                        }\n                    });\n                });\n    \n                // Filter results by minimum rating (if specified)\n                const filteredResults = filters.minRating\n                    ? results.filter((place) => place.rating >= filters.minRating)\n                    : results;\n    \n                filteredResults.forEach((place) => {\n                    if (place.geometry?.location) {\n                        const marker = new window.google.maps.Marker({\n                            position: place.geometry.location,\n                            map: mapRef.current,\n                            title: place.name,\n                        });\n    \n                        const infowindow = new window.google.maps.InfoWindow({\n                            content: `\n                                <div>\n                                    <h3>${place.name}</h3>\n                                    <p>${place.vicinity}</p>\n                                    <p>${place.rating ? `${place.rating} ⭐` : \"No rating\"}</p>\n                                </div>\n                            `,\n                        });\n    \n                        marker.addListener(\"click\", () => {\n                            infowindow.open(mapRef.current, marker);\n                        });\n    \n                        markersRef.current.push(marker);\n                    }\n                });\n    \n                setRestaurants(filteredResults);\n                setLoading(false);\n            } catch (err) {\n                setError(err.message);\n                setLoading(false);\n                throw err;\n            }\n        },\n        [searchLocation]\n    );\n    \n    \n\n    // Cleanup on unmount\n    useEffect(() => {\n        return () => {\n            clearMarkers();\n        };\n    }, []);\n\n    return { restaurants, loading, error, initMap };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}