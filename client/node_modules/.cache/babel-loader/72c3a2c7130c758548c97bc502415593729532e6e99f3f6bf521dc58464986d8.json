{"ast":null,"code":"var _jsxFileName = \"/Users/parthsoni/Desktop/dishwise/client/src/pages/Favorites.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Favorites = () => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      const token = localStorage.getItem(\"token\");\n      try {\n        const response = await fetch('http://localhost:8000/api/favorites', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) throw new Error(\"Failed to fetch favorites\");\n        console.log(response);\n        const data = await response.json();\n        setFavorites(data.favorites || []); // Ensure it's an array\n      } catch (error) {\n        console.error(\"Error fetching favorites:\", error);\n        setFavorites([]); // Fail gracefully\n      }\n    };\n    fetchFavorites();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), favorites.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: favorites.map(dish => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: dish.dishName\n      }, dish.dishId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No favorites added yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Favorites, \"gYNGUuNbE7AW8shO5JZPpsJJ/gw=\");\n_c = Favorites;\nexport default Favorites;\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Favorites","_s","favorites","setFavorites","fetchFavorites","token","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","console","log","data","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","dish","dishName","dishId","_c","$RefreshReg$"],"sources":["/Users/parthsoni/Desktop/dishwise/client/src/pages/Favorites.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Favorites = () => {\n    const [favorites, setFavorites] = useState([]);\n\n    useEffect(() => {\n      const fetchFavorites = async () => {\n          const token = localStorage.getItem(\"token\");\n          try {\n              const response = await fetch('http://localhost:8000/api/favorites', {\n                  headers: { Authorization: `Bearer ${token}` },\n              });\n              if (!response.ok) throw new Error(\"Failed to fetch favorites\");\n              console.log(response);\n              const data = await response.json();\n              setFavorites(data.favorites || []); // Ensure it's an array\n          } catch (error) {\n              console.error(\"Error fetching favorites:\", error);\n              setFavorites([]); // Fail gracefully\n          }\n      };\n      fetchFavorites();\n  }, []);\n\n    return (\n        <div>\n            <h1>My Favorites</h1>\n            {favorites.length > 0 ? (\n                <ul>\n                    {favorites.map((dish) => (\n                        <li key={dish.dishId}>{dish.dishName}</li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No favorites added yet.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Favorites;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAChEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAChD,CAAC,CAAC;QACF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAC9DC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;QACrB,MAAMQ,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCd,YAAY,CAACa,IAAI,CAACd,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACZJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDf,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;MACtB;IACJ,CAAC;IACDC,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEJ,oBACIL,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBrB,SAAS,CAACsB,MAAM,GAAG,CAAC,gBACjBzB,OAAA;MAAAoB,QAAA,EACKjB,SAAS,CAACuB,GAAG,CAAEC,IAAI,iBAChB3B,OAAA;QAAAoB,QAAA,EAAuBO,IAAI,CAACC;MAAQ,GAA3BD,IAAI,CAACE,MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELxB,OAAA;MAAAoB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACtB,EAAA,CApCID,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}